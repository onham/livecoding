bpm 140

let kick a b = struct a $ stack 
        [
            s "SOPHIE_dry_kicks" 
            # n 15 
            # legato b 
        ]

let bsynth a sl scl ar b c = struct a $ stack
        [
            note (slow sl $ scale scl $ arp ar b) 
            # s "superhoover" 
            # legato c
        ]

let snare a b = struct a $ stack 
        [
            s "jungle"
            # n 12 
            # legato b
        ]

let
    patSynth = binaryN 4 "<2046 3333> <3333 4837>"
    patSynth2 = binaryN 16 "<3330234>"
    patSynth3 = binaryN 16 "<4234678 23445>"
    patSynth4 = binaryN 16 "<3234234 23445>"
    patKick = binaryN 16 12341 
    patKick2 = binaryN 16 61234
    patKick3 = "t(<4 4 6 <6 [4 6]>>, 16)" 
    patSnare = binaryN 16 344343
    patSnare2 = binaryN 16 42821
    patSnare3 = binaryN 16 452381
    patSnare4 = binaryN 16 234
in
d1
    -- $ every 8 (rev . striate 4) $ every 8 (# speed "-1")
    -- $ shiftB "f f f t" 0.125
    -- $ shiftF "t f f f" 0.25
    $ stack [
        bsynth
            patSynth3
            1
            "minor" 
            "<updown thumbdownup>" 
            "a4'min7 b4'm7f5 <c5'm7f5 <g4'm7 g4'm7 g4'm7 e4'm7>>" 
            0.9
        # gain 0.9
        # octave 5
        ,
        kick patKick 1.5
        # speed (range 1.25 0.75 $ sine)
        -- # speed (range 1.25 1.75 $ sine)
        # nudge (fast 8 "0 0.01")
        # gain 1.0
        ,
        snare patSnare 1.25
        -- # speed (range 1.25 0.75 $ sine)
        # nudge (fast 8 "0 0.01")
        # gain 1.3
    ]

once $ s "looper" # n 0

once  
    $ n "~ 0" 
    # s "loop" 
    # hpf 1000 
    # lpf 1500 
    # begin (fast 5 $ sine * 0.4)
    # speed ((range 1.0 1.5 rand - 0.5))
    # accelerate (fast "[0.25 4 2 3] * 4" $ range (-3) 3 $ sine * (fast "<2 6 8 4>" $ sine))
    # up (offadd (2/8) 2 $ offadd (3/8) 2 $ "[[0 -3 -5 -7 -9](9,16)]")
    # gain 0.8